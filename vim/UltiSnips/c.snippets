###########################################################################
#                            TextMate Snippets                            #
###########################################################################

priority -40

snippet #ifndef "#ifndef ... #define ... #endif"
#ifndef ${1/([A-Za-z0-9_]+).*/$1/}
#define ${1:SYMBOL} ${2:value}
#endif // $1
endsnippet

snippet main "main() (main)"
int main(int argc, char **argv)
{
	${VISUAL}$0
	return 0;
}
endsnippet

snippet for "for loop (for)"
for (${2:i} = 0; $2 < ${1:count}; ${3:++$2})
{
	${VISUAL}$0
}
endsnippet

snippet fori "for int loop (fori)"
for (${4:int} ${2:i} = 0; $2 < ${1:count}; ${3:++$2})
{
	${VISUAL}$0
}
endsnippet

snippet link "Linked list"
${1:listvar} = ${2:var}->${3:Link}.Flink;
while ($1 != &$2->$3)
{
	P${4:type} ${5:varname} = CONTAINING_RECORD($1, $4, $3);
	CxMmPrefetch($1->Link, _MM_HINT_T0);
	$1 = $1->Flink;

	$0
}
endsnippet

snippet once "Include header once only guard"
#ifndef ${1:`!p
if not snip.c:
	name = re.sub(r'[^A-Za-z0-9]+','_', snip.fn).upper()
	snip.rv = ('_%s_' % (name)).upper()
else:
	snip.rv = snip.c`}
#define $1

${VISUAL}$0

#endif // $1
endsnippet

snippet fprintf "fprintf ..."
fprintf(${1:stderr}, "${2:%s}\n"${2/([^%]|%%)*(%.)?.*/(?2:, :\);)/}$3${2/([^%]|%%)*(%.)?.*/(?2:\);)/}
endsnippet

snippet while "while.."
while (${1})
{
	${0:${VISUAL}}
}
endsnippet

snippet funcall
${1:status} = ${2:function}(${3:parameters});
if (!NT_SUCCESS($1))
{
	ERROR("[ERROR] $2 failed: %08x\n", $1);
	$0
}
endsnippet

snippet ifs
if (!NT_SUCCESS(${1:status}))
{
	${0:${VISUAL}}
}
endsnippet

snippet if
if (${1})
{
	${0:${VISUAL}}
}
endsnippet

snippet elif "else if"
else if (${1})
{
	${0:${VISUAL}}
}
endsnippet

snippet else
else
{
	${0:${VISUAL}}
}
endsnippet

snippet printf "printf .. (printf)"
printf("${1:%s}\n"${1/([^%]|%%)*(%.)?.*/(?2:, :\);)/}$2${1/([^%]|%%)*(%.)?.*/(?2:\);)/}
endsnippet

snippet st "struct"
typedef struct _${1:/* struct name */}
{
	${0:/* data */}
} $1, *P$1;
endsnippet

snippet fun "function" b
//
// $2
//
${1:NTSTATUS}
${2:function_name}(
	_In_ PGUEST_STATE GuestState,
	$3
	)
{
	${VISUAL}$0
}
endsnippet

# vim:ft=snippets:
